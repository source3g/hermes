<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util-3.1.xsd
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">


	<!-- 数据绑定器 -->
	<bean id="myWebBindingInitializer" class="com.source3g.hermes.api.config.MyWebBindingInitializer">
		<property name="validator" ref="validator"></property>
	</bean>

	<!-- 以下 validator -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->
		<!-- <property name="validationMessageSource" ref="messageSource" /> -->
	</bean>

	<bean id="apiExceptionHandler" class="com.source3g.hermes.api.exception.ApiExceptionHandler" />

	<!-- 开启支持@Controller 和 @RequestMapping注解的处理器。 处理器映射RequestMappingHandlerMapping 
		和 处理器适配器RequestMappingHandlerAdapter组合来代替Spring2.5开始的处理器映射DefaultAnnotationHandlerMapping和处理器适配器AnnotationMethodHandlerAdapter，提供更多的扩展点。 -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="webBindingInitializer" ref="myWebBindingInitializer">
		</property>
		<property name="messageConverters">
			<list>
				<ref bean="jsonConverter" />
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<bean class="org.springframework.http.MediaType">
								<constructor-arg index="0" value="text" />
								<constructor-arg index="1" value="plain" />
								<constructor-arg index="2" value="UTF-8" />
							</bean>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"></bean>



	<bean id="jsonConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes" value="application/json" />
		<property name="objectMapper" ref="objectMapper" />
	</bean>




	<bean id="conversion-service"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean" />


	<!-- 开启controller注解支持 -->
	<!-- 注：如果base-package=com.source3g 则注解事务不起作用 TODO 读源码 -->
	<context:component-scan base-package="com.source3g.hermes.*.api">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<mvc:view-controller path="/" view-name="forward:/index" />

	<!-- 当在web.xml 中 DispatcherServlet使用 <url-pattern>/</url-pattern> 映射时，能映射静态资源 -->
	<mvc:default-servlet-handler />
	<!-- 静态资源映射 -->
	<mvc:resources mapping="/images/**" location="/images/" />
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/js/**" location="/js/" />


	<!-- ========================= VIEW定义 ========================= -->
	<!-- bean name view resolver -->
	<!-- <bean class="org.springframework.web.servlet.view.BeanNameViewResolver" 
		p:order="0" /> -->

	<!-- 根据客户端的不同的请求决定不同的 view进行响应, 如 /blog/1.json /blog/1.xml -->
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver"
		p:order="1">
		<!-- 设置为true以忽略对Accept Header的支持 -->
		<!-- 扩展名至mimeType的映射,即 /user.json => application/json -->
		<property name="favorPathExtension" value="false" />

		<!-- 用于开启 /userinfo/123?format=json 的支持 -->
		<property name="favorParameter" value="false" />

		<property name="mediaTypes">  <!--favorPathExtension, favorParameter是true时才起作用 -->
			<map>
				<entry key="json" value="application/json" />
				<!-- <entry key="wml" value="text/vnd.wap.wml"/> -->
				<!-- <entry key="vnd" value="application/vnd.wap.xhtml+xml"/> -->
				<!-- <entry key="xhtml" value="application/xhtml+xml"/> -->
				<entry key="html" value="*" />
			</map>
		</property>
		<property name="viewResolvers">
			<list>
				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="viewClass"
						value="org.springframework.web.servlet.view.JstlView" />
					<property name="contentType" value="text/html" />
					<property name="prefix" value="/jsp/" />
					<property name="suffix" value=".jsp" />
				</bean>
			</list>
		</property>
		<!-- 可配置Not Found url -->
		<property name="defaultViews">
			<list>
				<bean class="org.springframework.web.servlet.view.JstlView"
					p:url="/notfound" />
				<ref bean="defaultJsonView" />
			</list>
		</property>
	</bean>

	<!-- json view -->
	<bean id="defaultJsonView"
		class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
		<property name="objectMapper" ref="objectMapper"></property>
	</bean>



	<!-- 文件上传相关 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!--one of the properties available;the maximum file size in bytes -->
		<property name="maxUploadSize" value="100000" />
	</bean>

	<bean id="customEditorConfigurer"
		class="org.springframework.beans.factory.config.CustomEditorConfigurer">
		<property name="customEditors">
			<map>
				<entry key="org.bson.types.ObjectId">
					<bean class="com.source3g.hermes.api.config.ObjectIdPropertyEditor" />
				</entry>
			</map>
		</property>
	</bean>

</beans>
